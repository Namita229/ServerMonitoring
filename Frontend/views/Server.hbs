<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}} - Server Monitoring</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: #f8f9fa;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 800px;
            margin: 40px auto;
            padding: 30px;
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 30px;
            text-align: center;
            color: #dc3545;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 8px;
            color: #555;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #dc3545;
            box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);
        }

        .btn {
            display: inline-block;
            padding: 12px 25px;
            border: none;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            width: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(220, 53, 69, 0.3);
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 10px;
            color: white;
        }

        .alert-danger {
            background: #dc3545;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            top: 50%;
            right: 15px;
            transform: translateY(-50%);
            cursor: pointer;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>{{title}}</h1>

        {{#if error}}
            <div class="alert alert-danger">{{error}}</div>
        {{/if}}

        <form id="serverForm" action="/server/{{#if server._id}}edit/{{server._id}}{{else}}add{{/if}}" method="POST" onsubmit="return validateForm()">
            <div class="form-group">
                <label for="model">Server Model</label>
                <input type="text" id="model" name="model" value="{{server.model}}" required>
            </div>

           <div class="form-group">
                <label for="serverNumber">Server Number</label>

                {{!-- If in Add Server, show full dropdown --}}
                {{#if (eq title "Add Server")}}
                    <select id="serverNumber" name="serverNumber" required>
                        {{#each (range 1 10)}}
                            <option value="{{this}}" {{#if (eq this ../server.serverNumber)}}selected{{/if}}>
                                {{this}}
                            </option>
                        {{/each}}
                    </select>
                {{/if}}

                {{!-- If in Edit Server, lock serverNumber to DB value --}}
                {{#if (eq title "Edit Server")}}
                    <input type="text" id="serverNumber" name="serverNumber" value="{{server.serverNumber}}" readonly>
                {{/if}}

                <div id="serverNumberError" class="alert alert-danger" style="display: none;"></div>
            </div>

            <div class="form-group">
                <label for="os">Operating System</label>
                <select id="os" name="os" required>
                    <option value="Windows" {{#if (eq server.os "Windows")}}selected{{/if}}>Windows</option>
                    <option value="Ubuntu" {{#if (eq server.os "Ubuntu")}}selected{{/if}}>Ubuntu</option>
                    <option value="Dual Boot" {{#if (eq server.os "Dual Boot")}}selected{{/if}}>Dual Boot</option>
                </select>
            </div>
            <div class="form-group">
                <label for="ram">RAM</label>
                <select id="ram" name="ram" required>
                    <option value="64 GB" {{#if (eq server.ram "64 GB")}}selected{{/if}}>64 GB</option>
                    <option value="128 GB" {{#if (eq server.ram "128 GB")}}selected{{/if}}>128 GB</option>
                    <option value="256 GB" {{#if (eq server.ram "256 GB")}}selected{{/if}}>256 GB</option>
                    <option value="512 GB" {{#if (eq server.ram "512 GB")}}selected{{/if}}>512 GB</option>
                </select>
            </div>
            <div class="form-group">
                <label for="storage">Storage</label>
                <select id="storage" name="storage" required>
                    {{#each (range 1 20)}}
                        <option value="{{this}} TB" {{#if (eq ../server.storage (concat this " TB"))}}selected{{/if}}>{{this}} TB</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" id="username" name="username" value="{{server.username}}" required>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <div class="password-wrapper">
                    <input type="password" id="password" name="password" value="{{server.password}}" required>
                    <i class="fas fa-eye-slash toggle-password"></i>
                </div>
            </div>
            <div class="form-group">
                <label for="serverIp">Server IP</label>
                <input type="text" id="serverIp" name="serverIp" value="{{server.serverIp}}" required>
                <div id="serverIpError" class="alert alert-danger" style="display: none;"></div>
            </div>
            <div class="form-group">
                <label for="allocatedDomain">Allocated Domain</label>
                <select id="allocatedDomain" name="allocatedDomain" required>
                    <option value="5G" {{#if (eq server.allocatedDomain "5G")}}selected{{/if}}>5G</option>
                    <option value="EdgeCloud" {{#if (eq server.allocatedDomain "EdgeCloud")}}selected{{/if}}>EdgeCloud</option>
                    <option value="Openstack" {{#if (eq server.allocatedDomain "Openstack")}}selected{{/if}}>Openstack</option>
                    <option value="Blockchain" {{#if (eq server.allocatedDomain "Blockchain")}}selected{{/if}}>Blockchain</option>
                </select>
            </div>
            <div class="form-group">
                <label for="team">Team</label>
                <input type="text" id="team" name="team" value="{{server.team}}" required>
            </div>
            <div class="form-group">
                <label for="status">Status</label>
                <select id="status" name="status">
                    <option value="on" {{#if (eq server.status 'on')}}selected{{/if}}>On</option>
                    <option value="off" {{#if (eq server.status 'off')}}selected{{/if}}>Off</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">{{title}}</button>
        </form>
    </div>
    <script>
        const existingServerNumbers = {{{existingServerNumbers}}};

        function validateForm() {
            const serverNumber = document.getElementById('serverNumber').value;
            const serverIp = document.getElementById('serverIp').value;
            const serverNumberError = document.getElementById('serverNumberError');
            const serverIpError = document.getElementById('serverIpError');
            let isValid = true;

            // Validate Server Number
            if (existingServerNumbers.includes(parseInt(serverNumber))) {
                serverNumberError.textContent = 'Server number already exists.';
                serverNumberError.style.display = 'block';
                isValid = false;
            } else {
                serverNumberError.style.display = 'none';
            }

            // Validate Server IP
            const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
            if (!ipRegex.test(serverIp)) {
                serverIpError.textContent = 'Invalid IP address format. Must be xxx.xxx.xxx.xxx with each quadrant between 0-255.';
                serverIpError.style.display = 'block';
                isValid = false;
            } else {
                serverIpError.style.display = 'none';
            }

            return isValid;
        }

        document.addEventListener('DOMContentLoaded', function () {
            const passwordWrappers = document.querySelectorAll('.password-wrapper');

            passwordWrappers.forEach(wrapper => {
                const passwordInput = wrapper.querySelector('input');
                const togglePassword = wrapper.querySelector('.toggle-password');

                if (passwordInput && togglePassword) {
                    togglePassword.addEventListener('click', function () {
                        // toggle the type attribute
                        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                        passwordInput.setAttribute('type', type);
                        // toggle the eye icon
                        this.classList.toggle('fa-eye');
                        this.classList.toggle('fa-eye-slash');
                    });
                }
            });
        });
    </script>
</body>
</html>
